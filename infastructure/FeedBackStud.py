#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.0
#  in conjunction with Tcl version 8.6
#    Jan 06, 2021 08:29:30 PM +0200  platform: Windows NT

import sys
import pymongo
sys.path.append('..')

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import FeedBackStud_support
import Studentmainmenu
from tkinter import messagebox
from data import getSubject, getUser, connect_to_db_and_collection

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    FeedBackStud_support.set_Tk_var()
    top = FeedbackTeacher (root)
    FeedBackStud_support.init(root, top)
    root.mainloop()

w = None
def create_FeedbackTeacher(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_FeedbackTeacher(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    FeedBackStud_support.set_Tk_var()
    top = FeedbackTeacher (w)
    FeedBackStud_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_FeedbackTeacher():
    global w
    w.destroy()
    w = None

class FeedbackTeacher:
    def openmainmenue(self):
        root.destroy()
        Studentmainmenu.vp_start_gui()

    def getfeedback(self):
        assigncolec = connect_to_db_and_collection('EZSchooldb', f'''Assignments{self.current_user['id']}''')
        chosenassgin = int(self.MatalaC.get())
        flag =0
        for assigment in assigncolec.find({'FeedBack': {'$exists': True}}):
            if assigment['Assignment_num'] == chosenassgin:
                self.GradeEn.delete(0, "end")
                self.textBX.delete(1.0, "end")
                self.GradeEn.insert(0, assigment['grade'])
                self.textBX.insert(1.0, assigment['FeedBack'])
                flag=1
                break
        if flag == 0:
            messagebox.showinfo("אין משוב", "המטלה לא נבדקה או לא הוגשה נא לבחור מטלה אחרת")
            return

    def __init__(self, top=None):
        self.current_subject = getSubject()
        self.current_user = getUser()
        assigncolec = connect_to_db_and_collection('EZSchooldb', f'''{self.current_subject}Assignments''')
        self.numofassignments = assigncolec.estimated_document_count()

        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("600x459+726+356")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("משוב לשיעורי בית")
        top.configure(background="#80ffff")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.getstudfeedbtn = tk.Button(top)
        self.getstudfeedbtn.place(relx=0.167, rely=0.131, height=74, width=177)
        self.getstudfeedbtn.configure(activebackground="#ececec")
        self.getstudfeedbtn.configure(activeforeground="#000000")
        self.getstudfeedbtn.configure(background="#ff0000")
        self.getstudfeedbtn.configure(disabledforeground="#a3a3a3")
        self.getstudfeedbtn.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.getstudfeedbtn.configure(foreground="#000000")
        self.getstudfeedbtn.configure(highlightbackground="#ffffff")
        self.getstudfeedbtn.configure(highlightcolor="black")
        self.getstudfeedbtn.configure(pady="0")
        self.getstudfeedbtn.configure(text='''לקבלת משוב''')
        self.getstudfeedbtn.configure(command=self.getfeedback)

        self.StudL = tk.Label(top)
        self.StudL.place(relx=0.633, rely=0.131, height=31, width=174)
        self.StudL.configure(activebackground="#f9f9f9")
        self.StudL.configure(activeforeground="black")
        self.StudL.configure(background="#0080ff")
        self.StudL.configure(disabledforeground="#a3a3a3")
        self.StudL.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.StudL.configure(foreground="#000000")
        self.StudL.configure(highlightbackground="#d9d9d9")
        self.StudL.configure(highlightcolor="black")
        self.StudL.configure(relief="ridge")
        self.StudL.configure(text='''לבחירת מטלה''')

        self.FeedbL = tk.Label(top)
        self.FeedbL.place(relx=0.383, rely=0.022, height=41, width=200)
        self.FeedbL.configure(activebackground="#f9f9f9")
        self.FeedbL.configure(activeforeground="black")
        self.FeedbL.configure(background="#ff00ff")
        self.FeedbL.configure(disabledforeground="#a3a3a3")
        self.FeedbL.configure(font="-family {Segoe UI} -size 18 -weight bold -underline 1")
        self.FeedbL.configure(foreground="#000000")
        self.FeedbL.configure(highlightbackground="#d9d9d9")
        self.FeedbL.configure(highlightcolor="black")
        self.FeedbL.configure(relief="ridge")
        if self.current_subject == 'Math':
            self.FeedbL.configure(text='''משוב לחשבון''')
        elif self.current_subject == 'History':
            self.FeedbL.configure(text='''משוב להיסטוריה''')
        elif self.current_subject == 'Hebrew':
            self.FeedbL.configure(text='''משוב לעברית''')
        elif self.current_subject == 'Tanach':
            self.FeedbL.configure(text='''משוב לתנ"ך''')

        self.MarkL = tk.Label(top)
        self.MarkL.place(relx=0.667, rely=0.349, height=41, width=114)
        self.MarkL.configure(activebackground="#f9f9f9")
        self.MarkL.configure(activeforeground="black")
        self.MarkL.configure(background="#d9d9d9")
        self.MarkL.configure(disabledforeground="#a3a3a3")
        self.MarkL.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.MarkL.configure(foreground="#000000")
        self.MarkL.configure(highlightbackground="#d9d9d9")
        self.MarkL.configure(highlightcolor="black")
        self.MarkL.configure(relief="ridge")
        self.MarkL.configure(text='''ציון''')

        self.GradeEn = tk.Entry(top)
        self.GradeEn.place(relx=0.667, rely=0.479, height=30, relwidth=0.19)
        self.GradeEn.configure(background="white")
        self.GradeEn.configure(disabledforeground="#a3a3a3")
        self.GradeEn.configure(font="TkFixedFont")
        self.GradeEn.configure(foreground="#000000")
        self.GradeEn.configure(highlightbackground="#d9d9d9")
        self.GradeEn.configure(highlightcolor="black")
        self.GradeEn.configure(insertbackground="black")
        self.GradeEn.configure(selectbackground="blue")
        self.GradeEn.configure(selectforeground="white")

        self.feebackL = tk.Label(top)
        self.feebackL.place(relx=0.117, rely=0.349, height=41, width=244)
        self.feebackL.configure(activebackground="#f9f9f9")
        self.feebackL.configure(activeforeground="black")
        self.feebackL.configure(background="#d9d9d9")
        self.feebackL.configure(disabledforeground="#a3a3a3")
        self.feebackL.configure(font="-family {Segoe UI} -size 12 -weight bold -underline 1")
        self.feebackL.configure(foreground="#000000")
        self.feebackL.configure(highlightbackground="#d9d9d9")
        self.feebackL.configure(highlightcolor="black")
        self.feebackL.configure(relief="ridge")
        self.feebackL.configure(text='''משוב''')

        self.MainMenuBtn = tk.Button(top)
        self.MainMenuBtn.place(relx=0.033, rely=0.828, height=64, width=127)
        self.MainMenuBtn.configure(activebackground="#ececec")
        self.MainMenuBtn.configure(activeforeground="#000000")
        self.MainMenuBtn.configure(background="#ffffff")
        self.MainMenuBtn.configure(disabledforeground="#a3a3a3")
        self.MainMenuBtn.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.MainMenuBtn.configure(foreground="#000000")
        self.MainMenuBtn.configure(highlightbackground="#d9d9d9")
        self.MainMenuBtn.configure(highlightcolor="black")
        self.MainMenuBtn.configure(pady="0")
        self.MainMenuBtn.configure(text='''תפריט ראשי''')
        self.MainMenuBtn.configure(command=self.openmainmenue)

        self.MatalaC = ttk.Combobox(top)
        self.MatalaC.place(relx=0.633, rely=0.218, relheight=0.068
                , relwidth=0.288)
        self.MatalaC.configure(value=list(range(1, self.numofassignments+1)))
        self.MatalaC.configure(takefocus="")
        if self.numofassignments == 0:
            self.MatalaC.configure(state='disabled')
            self.MatalaC.configure(value="אין")
            self.getstudfeedbtn.configure(state='disabled')
        self.MatalaC.current(0)


        self.textBX = tk.Text(top)
        self.textBX.place(relx=0.117, rely=0.479, relheight=0.292, relwidth=0.407)
        self.textBX.configure(background="white")
        self.textBX.configure(font="TkTextFont")
        self.textBX.configure(foreground="black")
        self.textBX.configure(highlightbackground="#d9d9d9")
        self.textBX.configure(highlightcolor="black")
        self.textBX.configure(insertbackground="black")
        self.textBX.configure(selectbackground="blue")
        self.textBX.configure(selectforeground="white")
        self.textBX.configure(wrap="word")

if __name__ == '__main__':
    vp_start_gui()





