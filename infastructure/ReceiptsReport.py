#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.0
#  in conjunction with Tcl version 8.6
#    Jan 07, 2021 08:03:17 AM +0200  platform: Windows NT

import sys
import pymongo
sys.path.append('..')

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import ReceiptsReport_support
from data import getUser, connect_to_db_and_collection

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = ReceiptsReport (root)
    ReceiptsReport_support.init(root, top)
    root.mainloop()

w = None
def create_ReceiptsReport(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_ReceiptsReport(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = ReceiptsReport (w)
    ReceiptsReport_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_ReciptsTree():
    global w
    w.destroy()
    w = None

class ReceiptsReport:
    def InsertRecipts(self):
        if not 'receipts' in self.current_user.keys():
            self.current_user['receipts'] = []
        recipts = self.current_user['receipts']
        for recipt in recipts:
            row = self.ReciptsTree.insert("", 'end',text=recipt['receipt_number'],
                                  values=('', '', recipt['total price'], recipt['purchase_time']))
            for item_name in recipt.keys():
                if not (item_name == 'total price' or item_name == 'receipt_number' or item_name == 'purchase_time'):
                    self.ReciptsTree.insert(row, 'end', text='', values=(item_name, recipt[item_name], ""))

    def __init__(self, top=None):
        self.current_user = getUser()

        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("600x450+633+236")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("דוח קבלות")
        top.configure(background="#80ffff")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.NameL = tk.Label(top)
        self.NameL.place(relx=0.517, rely=0.067, height=41, width=214)
        self.NameL.configure(activebackground="#f9f9f9")
        self.NameL.configure(activeforeground="black")
        self.NameL.configure(background="#00ff40")
        self.NameL.configure(disabledforeground="#a3a3a3")
        self.NameL.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.NameL.configure(foreground="#000000")
        self.NameL.configure(highlightbackground="#d9d9d9")
        self.NameL.configure(highlightcolor="black")
        self.NameL.configure(relief="ridge")
        self.NameL.configure(text=f'''{self.current_user['name']}''')

        self.IdL = tk.Label(top)
        self.IdL.place(relx=0.517, rely=0.2, height=41, width=214)
        self.IdL.configure(activebackground="#f9f9f9")
        self.IdL.configure(activeforeground="black")
        self.IdL.configure(background="#00ff40")
        self.IdL.configure(disabledforeground="#a3a3a3")
        self.IdL.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.IdL.configure(foreground="#000000")
        self.IdL.configure(highlightbackground="#d9d9d9")
        self.IdL.configure(highlightcolor="black")
        self.IdL.configure(relief="ridge")
        self.IdL.configure(text=f'''{self.current_user['id']}''')

        self.ReciptsTree = ttk.Treeview(top)
        self.ReciptsTree["columns"] = ("one", "two","three","four")
        self.ReciptsTree.column("#0", width=75, minwidth=75, stretch=tk.NO)
        self.ReciptsTree.column("one", width=150, minwidth=100, stretch=tk.YES)
        self.ReciptsTree.column("two", width=75, minwidth=100, stretch=tk.NO)
        self.ReciptsTree.column("three", width=100, minwidth=100, stretch=tk.NO)
        self.ReciptsTree.column("four", width=175, minwidth=200, stretch=tk.NO)
        self.ReciptsTree.heading("#0", text="מס' קבלה", anchor=tk.W)
        self.ReciptsTree.heading("one", text="מוצרים", anchor=tk.W)
        self.ReciptsTree.heading("two", text="כמות", anchor=tk.W)
        self.ReciptsTree.heading("three", text="מחיר כולל(₪)", anchor=tk.W)
        self.ReciptsTree.heading("four", text="תאריך עיסקה", anchor=tk.W)
        self.ReciptsTree.place(relx=0.02, rely=0.4)

        self.InsertRecipts()

if __name__ == '__main__':
    vp_start_gui()





