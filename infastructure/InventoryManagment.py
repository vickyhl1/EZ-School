#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.0
#  in conjunction with Tcl version 8.6
#    Dec 31, 2020 01:16:17 PM +0200  platform: Windows NT

import sys
import pymongo
sys.path.append('..')

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import Secretarymainmenu
import InventoryManagment_support
from data import connect_to_db_and_collection
import InventReport

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    InventoryManagment_support.set_Tk_var()
    top = InventoryManage (root)
    InventoryManagment_support.init(root, top)
    root.mainloop()

w = None
def create_InventoryManage(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_InventoryManage(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    InventoryManagment_support.set_Tk_var()
    top = InventoryManage (w)
    InventoryManagment_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_InventoryManage():
    global w
    w.destroy()
    w = None

class InventoryManage:
    def InventReport(self):
        InventReport.vp_start_gui()
    def main_menu(self):
        root.destroy()
        Secretarymainmenu.vp_start_gui()
    def listofitems_names(self):
        mycol= connect_to_db_and_collection('EZSchooldb','Inventory')
        lstobj = list()
        for item in mycol.find({}):
            lstobj.append(item['item_name'])
        return lstobj

    def updateinventory(self):
        mycol = connect_to_db_and_collection('EZSchooldb','Inventory')
        updatechoice = self.TCombobox1.get()
        amountupdate = self.Entry1.get()
        if(amountupdate.isnumeric()):
            mycol.update_one({'item_name': updatechoice}, {"$set": {'units_available': int(amountupdate)}})
        else:
            tk.messagebox.showwarning('ניהול מלאי', 'המלאי שהוזן אינו מספר נא להזין שנית')

    def checkcurrentqty(self):
        mycol = connect_to_db_and_collection('EZSchooldb','Inventory')
        choice = self.TCombobox1.get()
        theobj = mycol.find_one({'item_name': choice})
        if not theobj == None:
            self.currentqtyM.configure(text=theobj['units_available'])


    def __init__(self, top=None):

        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1920x1051+-9+-9")
        top.minsize(148, 1)
        top.maxsize(1550, 900)
        top.resizable(1,  1)
        top.title("ניהול מלאי")
        top.configure(background="#c9f9bd")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.UntUpbtn = tk.Button(top)
        self.UntUpbtn.place(relx=0.385, rely=0.187, height=74, width=107)
        self.UntUpbtn.configure(activebackground="#ececec")
        self.UntUpbtn.configure(activeforeground="#000000")
        self.UntUpbtn.configure(background="#41e916")
        self.UntUpbtn.configure(cursor="hand2")
        self.UntUpbtn.configure(disabledforeground="#a3a3a3")
        self.UntUpbtn.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.UntUpbtn.configure(foreground="#000000")
        self.UntUpbtn.configure(highlightbackground="#d9d9d9")
        self.UntUpbtn.configure(highlightcolor="black")
        self.UntUpbtn.configure(pady="0")
        self.UntUpbtn.configure(text='''עדכון כמות''')
        self.UntUpbtn.configure(command=self.updateinventory)

        self.backbtn = tk.Button(top)
        self.backbtn.place(relx=0.026, rely=0.700, height=74, width=157)
        self.backbtn.configure(activebackground="#ececec")
        self.backbtn.configure(activeforeground="#000000")
        self.backbtn.configure(background="#41e916")
        self.backbtn.configure(cursor="hand2")
        self.backbtn.configure(disabledforeground="#a3a3a3")
        self.backbtn.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.backbtn.configure(foreground="#000000")
        self.backbtn.configure(highlightbackground="#d9d9d9")
        self.backbtn.configure(highlightcolor="black")
        self.backbtn.configure(pady="0")
        self.backbtn.configure(text='''תפריט ראשי''')
        self.backbtn.configure(command =self.main_menu)

        self.InventRep = tk.Button(top)
        self.InventRep.place(relx=0.747, rely=0.895, height=74, width=157)
        self.InventRep.configure(activebackground="#ececec")
        self.InventRep.configure(activeforeground="#000000")
        self.InventRep.configure(background="#41e916")
        self.InventRep.configure(cursor="hand2")
        self.InventRep.configure(disabledforeground="#a3a3a3")
        self.InventRep.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.InventRep.configure(foreground="#000000")
        self.InventRep.configure(highlightbackground="#d9d9d9")
        self.InventRep.configure(highlightcolor="black")
        self.InventRep.configure(pady="0")
        self.InventRep.configure(text='''הפק דו''ח''')
        self.InventRep.configure(command=self.InventReport)

        self.qtyL = tk.Label(top)
        self.qtyL.place(relx=0.464, rely=0.187, height=32, width=196)
        self.qtyL.configure(activebackground="#f9f9f9")
        self.qtyL.configure(activeforeground="black")
        self.qtyL.configure(background="#41e916")
        self.qtyL.configure(disabledforeground="#a3a3a3")
        self.qtyL.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.qtyL.configure(foreground="#000000")
        self.qtyL.configure(highlightbackground="#d9d9d9")
        self.qtyL.configure(highlightcolor="black")
        self.qtyL.configure(text='''כמות חדשה''')

        self.TCombobox1 = ttk.Combobox(top)
        self.TCombobox1.place(relx=0.661, rely=0.226, relheight=0.029, relwidth = 0.083)
        self.TCombobox1.configure(textvariable=InventoryManagment_support.combobox)
        self.TCombobox1.configure(takefocus="")
        self.TCombobox1.configure(value=self.listofitems_names())
        self.TCombobox1.current(0)


        self.nameL = tk.Label(top)
        self.nameL.place(relx=0.661, rely=0.187, height=31, width=165)
        self.nameL.configure(activebackground="#f9f9f9")
        self.nameL.configure(activeforeground="black")
        self.nameL.configure(background="#41e916")
        self.nameL.configure(disabledforeground="#a3a3a3")
        self.nameL.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.nameL.configure(foreground="#000000")
        self.nameL.configure(highlightbackground="#d9d9d9")
        self.nameL.configure(highlightcolor="black")
        self.nameL.configure(text='''פריט''')

        self.Entry1 = tk.Entry(top)
        self.Entry1.place(relx=0.469, rely=0.226, height=30, relwidth=0.083)
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(highlightbackground="#d9d9d9")
        self.Entry1.configure(highlightcolor="black")
        self.Entry1.configure(insertbackground="black")
        self.Entry1.configure(selectbackground="blue")
        self.Entry1.configure(selectforeground="white")

        self.titel = tk.Label(top)
        self.titel.place(relx=0.411, rely=0.049, height=89, width=444)
        self.titel.configure(background="#bbf9ae")
        self.titel.configure(disabledforeground="#a3a3a3")
        self.titel.configure(font="-family {Segoe UI} -size 18 -weight bold -underline 1")
        self.titel.configure(foreground="#000000")
        self.titel.configure(text='''ניהול מלאי''')

        self.currentqtyL = tk.Label(top)
        self.currentqtyL.place(relx=0.578, rely=0.187, height=32, width=123)
        self.currentqtyL.configure(background="#41e916")
        self.currentqtyL.configure(disabledforeground="#a3a3a3")
        self.currentqtyL.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.currentqtyL.configure(foreground="#000000")
        self.currentqtyL.configure(text='''כמות נוכחית''')

        self.currentqtyM = tk.Button(top)
        self.currentqtyM.place(relx=0.56, rely=0.226, relheight=0.03, relwidth=0.09)
        self.currentqtyM.configure(activebackground="#c9f9bd")
        self.currentqtyM.configure(activeforeground="#000000")
        self.currentqtyM.configure(background="#c9f9bd")
        self.currentqtyM.configure(cursor="hand2")
        self.currentqtyM.configure(disabledforeground="#a3a3a3")
        self.currentqtyM.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.currentqtyM.configure(foreground="#000000")
        self.currentqtyM.configure(highlightbackground="#d9d9d9")
        self.currentqtyM.configure(highlightcolor="black")
        self.currentqtyM.configure(pady="0")
        self.currentqtyM.configure(text='לצפייה לחץ כאן')
        self.currentqtyM.configure(command=self.checkcurrentqty)

if __name__ == '__main__':
    vp_start_gui()





